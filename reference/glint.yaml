openapi: 3.0.0
info:
  title: glint
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /user:
    get:
      summary: Get specific user by id
      tags:
        - User
        - List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    user:
                      id: 004c01ed-1e75-4672-836f-64cce11b10bc
                      name: Edward Patron
                      balance: '286.77'
                      created_at: '2022-04-08T17:52:19.508Z'
                      updated_at: '2022-04-08T17:52:19.508Z'
                properties:
                  user:
                    type: object
                    required:
                      - id
                      - name
                      - balance
                      - created_at
                      - updated_at
                    properties:
                      id:
                        type: string
                        minLength: 1
                        format: uuid
                      name:
                        type: string
                        minLength: 1
                      balance:
                        type: string
                        minLength: 1
                      created_at:
                        type: string
                        minLength: 1
                        format: date-time
                      updated_at:
                        type: string
                        minLength: 1
                        format: date-time
                required:
                  - user
              examples:
                Sample user:
                  value:
                    user:
                      id: 004c01ed-1e75-4672-836f-64cce11b10bc
                      name: Edward Patron
                      balance: '286.77'
                      created_at: '2022-04-08T17:52:19.508Z'
                      updated_at: '2022-04-08T17:52:19.508Z'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - error
                  - message
                x-examples:
                  example-1:
                    error: Internal Server Error
                    message: Something went wrong
              examples:
                user not found:
                  value:
                    error: Not Found
                    message: User not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
              examples:
                Internal Server Error:
                  value:
                    error: Internal Server Error
                    message: Something went wrong
      operationId: get-users
      parameters:
        - schema:
            type: string
          in: query
          name: userId
          description: User's ID
      description: Get specific user by id
    parameters: []
  /:
    get:
      summary: Get list of restaurants opened currently
      tags:
        - List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    restaurant:
                      - name: 100% Mexicano Restaurant
                        id: 7658a22b-d64d-4045-b1b8-1d799c48f2d5
                        day: 7
                        hours: '[01:07:00,15:04:00)'
                      - name: 12 Baltimore
                        id: 72f565a7-4161-4565-a472-a8120386457b
                        day: 7
                        hours: '[11:44:00,19:43:00)'
                properties:
                  restaurant:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          minLength: 1
                        id:
                          type: string
                          minLength: 1
                          format: uuid
                        day:
                          type: integer
                        hours:
                          type: string
                          minLength: 1
                          example: '[00:44:00,20:37:00)'
                      required:
                        - name
                        - id
                        - day
                        - hours
                required:
                  - restaurant
              examples:
                Restaurant's opened at certain time:
                  value:
                    restaurant:
                      - name: 100% Mexicano Restaurant
                        id: 7658a22b-d64d-4045-b1b8-1d799c48f2d5
                        day: 7
                        hours: '[01:07:00,15:04:00)'
                      - name: 12 Baltimore
                        id: 72f565a7-4161-4565-a472-a8120386457b
                        day: 7
                        hours: '[11:44:00,19:43:00)'
                      - name: 15Fifty - Sheraton - Starwood
                        id: 2dd86b1e-6cee-41e3-a4c7-5e611614adf2
                        day: 7
                        hours: '[01:02:00,17:18:00)'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
              examples:
                No restaurant error:
                  value:
                    error: No Restaurants found opened at current time
                    message: No restaurants opened at this time
      operationId: get-*
      description: Get list of restaurants opened currently
    parameters: []
  /date:
    get:
      summary: Get list of restaurants opened at certain date
      tags:
        - List
        - Date
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    restaurant:
                      - name: 024 Grille
                        id: 1377c402-7a11-4eb7-9dbe-9f657311021c
                        day: 5
                        hours: '[08:27:00,23:28:00)'
                      - name: 100% de Agave
                        id: 8a675692-ba81-4776-ae79-167d1f4e156e
                        day: 5
                        hours: '[10:08:00,22:53:00)'
                      - name: 1808 American Bistro
                        id: 26f79dec-2a80-4094-be63-fdf7c75f6f66
                        day: 5
                        hours: '[04:18:00,23:33:00)'
                      - name: 24 Plates
                        id: a3f6bacf-75c2-4abe-a04b-0736cd87947d
                        day: 5
                        hours: '[07:54:00,23:58:00)'
                properties:
                  restaurant:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          minLength: 1
                        id:
                          type: string
                          minLength: 1
                          format: uuid
                        day:
                          type: integer
                        hours:
                          type: string
                          minLength: 1
                          example: '[07:54:00,23:58:00)'
                      required:
                        - name
                        - id
                        - day
                        - hours
                required:
                  - restaurant
              examples:
                Restaurants opened at certain date time:
                  value:
                    restaurant:
                      - name: 024 Grille
                        id: 1377c402-7a11-4eb7-9dbe-9f657311021c
                        day: 5
                        hours: '[08:27:00,23:28:00)'
                      - name: 100% de Agave
                        id: 8a675692-ba81-4776-ae79-167d1f4e156e
                        day: 5
                        hours: '[10:08:00,22:53:00)'
                      - name: 1808 American Bistro
                        id: 26f79dec-2a80-4094-be63-fdf7c75f6f66
                        day: 5
                        hours: '[04:18:00,23:33:00)'
                      - name: 24 Plates
                        id: a3f6bacf-75c2-4abe-a04b-0736cd87947d
                        day: 5
                        hours: '[07:54:00,23:58:00)'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - error
                  - message
                x-examples:
                  example-1:
                    error: No Restaurants found opened at current time
                    message: No restaurants opened at this time
              examples:
                no restaurant found:
                  value:
                    error: No Restaurants found opened at current time
                    message: No restaurants opened at this time
      operationId: get-date
      parameters:
        - schema:
            type: string
            example: '2022-04-07T10:43:58.022Z'
            format: date-time
          in: query
          name: date
          description: Datetime at which opened restaurants needs to be checked
          required: true
      description: Get list of restaurants opened at certain date
  /search:
    get:
      summary: Combined search specific term on restaurant and menu
      tags:
        - List
        - Search
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    name:
                      - dishName: La Romaine Braisée au Fond de Veau
                        menuId: 18b68475-7da5-4a78-ad9c-20fe192c3e91
                        price: '665.73'
                        restaurantName: '''Ulu Ocean Grill and Sushi Lounge'
                        restaurantId: 9024854a-356d-4c31-a0cc-fe69c478f76f
                      - dishName: Hominy
                        menuId: d93151cb-fe25-45e0-b02f-1ffef7fea8bc
                        price: '946.95'
                        restaurantName: '''Ulu Ocean Grill and Sushi Lounge'
                        restaurantId: 9024854a-356d-4c31-a0cc-fe69c478f76f
                      - dishName: Baltimore terrapin
                        menuId: 167c2be1-0f27-4126-ab96-1c1216b26aad
                        price: '224.02'
                        restaurantName: '''Ulu Ocean Grill and Sushi Lounge'
                        restaurantId: 9024854a-356d-4c31-a0cc-fe69c478f76f
                properties:
                  result:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        dishName:
                          type: string
                          minLength: 1
                        menuId:
                          type: string
                          minLength: 1
                          format: uuid
                        price:
                          type: string
                          minLength: 1
                        restaurantName:
                          type: string
                          minLength: 1
                        restaurantId:
                          type: string
                          minLength: 1
                          format: uuid
                      required:
                        - dishName
                        - menuId
                        - price
                        - restaurantName
                        - restaurantId
                required:
                  - result
              examples:
                Combined Restaurant/Menu result example:
                  value:
                    result:
                      - dishName: La Romaine Braisée au Fond de Veau
                        menuId: 18b68475-7da5-4a78-ad9c-20fe192c3e91
                        price: '665.73'
                        restaurantName: '''Ulu Ocean Grill and Sushi Lounge'
                        restaurantId: 9024854a-356d-4c31-a0cc-fe69c478f76f
                      - dishName: Hominy
                        menuId: d93151cb-fe25-45e0-b02f-1ffef7fea8bc
                        price: '946.95'
                        restaurantName: '''Ulu Ocean Grill and Sushi Lounge'
                        restaurantId: 9024854a-356d-4c31-a0cc-fe69c478f76f
                      - dishName: Baltimore terrapin
                        menuId: 167c2be1-0f27-4126-ab96-1c1216b26aad
                        price: '224.02'
                        restaurantName: '''Ulu Ocean Grill and Sushi Lounge'
                        restaurantId: 9024854a-356d-4c31-a0cc-fe69c478f76f
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - error
                  - message
                x-examples:
                  example-1:
                    error: Not Found
                    message: No data found
              examples:
                No menu or restaurant have such a name:
                  value:
                    error: Not Found
                    message: No data found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - error
                  - message
                x-examples:
                  example-1:
                    error: Internal Server Error
                    message: Something went wrong
              examples:
                something went wrong:
                  value:
                    error: Internal Server Error
                    message: Something went wrong
      operationId: get-search
      parameters:
        - schema:
            type: string
          in: query
          name: name
          description: name of the dish or restaurant
          required: true
      description: Combined search specific term on restaurant and menu
  /search/menu:
    get:
      summary: Search menu by name
      tags:
        - List
        - Search
        - Menu
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    name:
                      - dishName: Fricassee of chicken
                        menuId: 77ca16bf-6d08-49ff-b223-c15b67c7e57c
                        price: '498.62'
                        restaurantName: A. Michael's
                        restaurantId: bc961c1e-b1d2-4643-9f42-b40b744211e1
                      - dishName: Chicken Bouillon with Rice (10 min.)
                        menuId: 7a5a39ce-2f16-4a2a-a4d5-e8a14bee909d
                        price: '962.03'
                        restaurantName: 100% Mexicano Restaurant
                        restaurantId: 7658a22b-d64d-4045-b1b8-1d799c48f2d5
                      - dishName: Fried chicken
                        menuId: 8c4382ae-15b0-4594-af91-a70e5c7adf90
                        price: '619.03'
                        restaurantName: 1913 Restaurant
                        restaurantId: 226eb970-122d-4a27-bf68-405c513edab3
                properties:
                  result:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        dishName:
                          type: string
                          minLength: 1
                        menuId:
                          type: string
                          minLength: 1
                        price:
                          type: string
                          minLength: 1
                        restaurantName:
                          type: string
                          minLength: 1
                        restaurantId:
                          type: string
                          minLength: 1
                      required:
                        - dishName
                        - menuId
                        - price
                        - restaurantName
                        - restaurantId
                required:
                  - result
              examples:
                Menu's having name as their dish:
                  value:
                    result:
                      - dishName: Fricassee of chicken
                        menuId: 77ca16bf-6d08-49ff-b223-c15b67c7e57c
                        price: '498.62'
                        restaurantName: A. Michael's
                        restaurantId: bc961c1e-b1d2-4643-9f42-b40b744211e1
                      - dishName: Chicken Bouillon with Rice (10 min.)
                        menuId: 7a5a39ce-2f16-4a2a-a4d5-e8a14bee909d
                        price: '962.03'
                        restaurantName: 100% Mexicano Restaurant
                        restaurantId: 7658a22b-d64d-4045-b1b8-1d799c48f2d5
                      - dishName: Fried chicken
                        menuId: 8c4382ae-15b0-4594-af91-a70e5c7adf90
                        price: '619.03'
                        restaurantName: 1913 Restaurant
                        restaurantId: 226eb970-122d-4a27-bf68-405c513edab3
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - error
                  - message
                x-examples:
                  example-1:
                    error: Not Found
                    message: No data found
              examples:
                No such menu/dish:
                  value:
                    error: Not Found
                    message: No data found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - error
                  - message
                x-examples:
                  example-1:
                    error: Internal Server Error
                    message: Something went wrong
              examples:
                something went wrong:
                  value:
                    error: Internal Server Error
                    message: Something went wrong
      operationId: get-search-menu
      description: Search menu by name
      parameters:
        - schema:
            type: string
            example: chicken
          in: query
          name: name
          required: true
          description: Name of the dish that needs to be searched in the menu
  /search/restaurant:
    get:
      summary: Search restaurant by name
      tags:
        - List
        - Search
        - Restaurant
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    name:
                      - restaurantName: Ocean Star
                        restaurantId: 0014893d-2210-427c-9ff6-32cdd840f8b6
                      - restaurantName: Ocean Star
                        restaurantId: 0014893d-2210-427c-9ff6-32cdd840f8b6
                      - restaurantName: Ocean Star
                        restaurantId: 0014893d-2210-427c-9ff6-32cdd840f8b6
                      - restaurantName: Ocean Star
                        restaurantId: 0014893d-2210-427c-9ff6-32cdd840f8b6
                      - restaurantName: Ocean Star
                        restaurantId: 0014893d-2210-427c-9ff6-32cdd840f8b6
                      - restaurantName: Ocean Star
                        restaurantId: 0014893d-2210-427c-9ff6-32cdd840f8b6
                properties:
                  result:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        restaurantName:
                          type: string
                          minLength: 1
                        restaurantId:
                          type: string
                          minLength: 1
                          format: uuid
                      required:
                        - restaurantName
                        - restaurantId
                required:
                  - result
              examples:
                restaurant having Ocean in their name:
                  value:
                    result:
                      - restaurantName: Ocean Star
                        restaurantId: 0014893d-2210-427c-9ff6-32cdd840f8b6
                      - restaurantName: Ocean Prime - Denver
                        restaurantId: 20ac9930-79f8-4038-9a5a-ac6a08f17ed0
                      - restaurantName: Ocean Prime - Indianapolis
                        restaurantId: 37e4a1e1-4419-4b22-ace4-11f0f794e69f
                      - restaurantName: Hapuna-Ocean Terrace
                        restaurantId: 785f001c-2f00-4227-8ae6-222a0b193eb5
                      - restaurantName: Mala Ocean Tavern - Lahaina
                        restaurantId: 854c6088-4834-4bef-a452-3bea3b6d55f6
                      - restaurantName: OCEAN - Hawks Cay Resort
                        restaurantId: 89278833-86fa-4b87-822e-20823eb3e38b
                      - restaurantName: '''Ulu Ocean Grill and Sushi Lounge'
                        restaurantId: 9024854a-356d-4c31-a0cc-fe69c478f76f
                      - restaurantName: Wai’olu Ocean View Lounge
                        restaurantId: a3a5cc7c-f7e6-4352-81ed-6cf761be7a88
                      - restaurantName: Ocean Pool Bar & Grill - Westin Kaanapali Ocean Resort Villas
                        restaurantId: b13a02ef-ecd7-42b0-9f4a-d89d5a165d85
                      - restaurantName: Ocean House Restaurant
                        restaurantId: b4f6ef13-76a8-47ac-97b9-32cfdad8b759
                      - restaurantName: Ocean 60
                        restaurantId: d9e8e00a-1781-467f-b8b4-d23abeaf4f2f
                      - restaurantName: Azurea at One Ocean
                        restaurantId: fc17b020-596b-4753-ad59-80af318ae241
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - error
                  - message
                x-examples:
                  example-1:
                    error: Not Found
                    message: No data found
              examples:
                no such restaurant:
                  value:
                    error: Not Found
                    message: No data found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - error
                  - message
                x-examples:
                  example-1:
                    error: Internal Server Error
                    message: Something went wrong
              examples:
                something went wrong:
                  value:
                    error: Internal Server Error
                    message: Something went wrong
      operationId: get-search-restaurant
      description: Search restaurant by name
      parameters:
        - schema:
            type: string
            example: chicken
          in: query
          name: name
          required: true
          description: Name of the restaurant that needs to be searched
    parameters: []
  /buy:
    post:
      summary: Do a transaction by sending userId and the id of menu that will be bought
      tags:
        - Transaction
        - User
        - Menu
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        minLength: 1
                      name:
                        type: string
                        minLength: 1
                      balance:
                        type: string
                        minLength: 1
                      created_at:
                        type: string
                        minLength: 1
                      updated_at:
                        type: string
                        minLength: 1
                    required:
                      - id
                      - name
                      - balance
                      - created_at
                      - updated_at
                required:
                  - user
                x-examples:
                  example-1:
                    user:
                      id: 08ba937a-6e03-41da-918e-116ed0a9df34
                      name: Richard Houston
                      balance: '386.17'
                      created_at: '2022-04-08T17:52:18.143Z'
                      updated_at: '2022-04-08T17:52:18.143Z'
              examples:
                Updated balance alongside user info when transaction succeeds:
                  value:
                    user:
                      id: 08ba937a-6e03-41da-918e-116ed0a9df34
                      name: Richard Houston
                      balance: '386.17'
                      created_at: '2022-04-08T17:52:18.143Z'
                      updated_at: '2022-04-08T17:52:18.143Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - error
                  - message
                x-examples:
                  example-1:
                    error: Bad Request
                    message: Insufficient balance
              examples:
                Error when user does not have sufficient balance:
                  value:
                    error: Bad Request
                    message: Insufficient balance
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - error
                  - message
                x-examples:
                  example-1:
                    error: Internal Server Error
                    message: Something went wrong
              examples:
                Something went wrong:
                  value:
                    error: Internal Server Error
                    message: Something went wrong
      operationId: get-buy
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: userId
          description: Id of the user that is going to buy
          required: true
        - schema:
            type: string
            format: uuid
          in: query
          name: menuId
          description: Id of the dish that is going to be bought
          required: true
      description: Do a transaction by sending userId and the id of menu that will be bought
  /top:
    get:
      summary: Get top x restaurants based on the number of dishes with prices in certain range
      tags:
        - List
        - Ranking
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    name:
                      - name: 024 Grille
                        id: 1377c402-7a11-4eb7-9dbe-9f657311021c
                      - name: 100% Mexicano Restaurant
                        id: 7658a22b-d64d-4045-b1b8-1d799c48f2d5
                      - name: 12th Ave. Grill
                        id: 3d65e220-d208-4644-8977-6cee2b55cbb1
                      - name: 13 Coins
                        id: 2fc3ac2f-3998-4221-81ec-42e5fc1f051b
                      - name: 1515 Restaurant
                        id: 224e44a3-d70e-44fe-bfa8-c32ce4af504d
                properties:
                  top:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          minLength: 1
                        id:
                          type: string
                          minLength: 1
                      required:
                        - name
                        - id
                required:
                  - top
              examples:
                Sample output with dishes having max min in range:
                  value:
                    top:
                      - name: 024 Grille
                        id: 1377c402-7a11-4eb7-9dbe-9f657311021c
                      - name: 100% Mexicano Restaurant
                        id: 7658a22b-d64d-4045-b1b8-1d799c48f2d5
                      - name: 12th Ave. Grill
                        id: 3d65e220-d208-4644-8977-6cee2b55cbb1
                      - name: 13 Coins
                        id: 2fc3ac2f-3998-4221-81ec-42e5fc1f051b
                      - name: 1515 Restaurant
                        id: 224e44a3-d70e-44fe-bfa8-c32ce4af504d
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - error
                  - message
                x-examples:
                  example-1:
                    error: Not Found
                    message: No data found
              examples:
                No top ranking restaurants found:
                  value:
                    error: Not Found
                    message: No data found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - error
                  - message
                x-examples:
                  example-1:
                    error: Internal Server Error
                    message: Something went wrong
              examples:
                server went wrong:
                  value:
                    error: Internal Server Error
                    message: Something went wrong
      operationId: get-top
      parameters:
        - schema:
            type: number
            format: float
            minimum: 2
            example: 300.1
          in: query
          name: max
          required: true
          description: Maximum price
        - schema:
            type: number
            format: float
            minimum: 1
            example: 100.2
          in: query
          name: min
          description: minimum price
          required: true
        - schema:
            type: integer
            example: 5
          in: query
          name: limit
          description: limit of restaurants that needs to be found
          required: true
      description: Get top x restaurants based on the number of dishes with prices in certain range
components:
  schemas:
    User:
      title: User
      type: object
      description: User Model
      x-examples:
        Sample user:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          name: Spark the great
          balance: 100.01
          created_at: '2019-08-24T14:15:22Z'
          updated_at: '2019-08-24T14:15:22Z'
      properties:
        id:
          type: string
          description: Unique identifier for the given user.
          format: uuid
        name:
          type: string
        balance:
          type: number
          format: float
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - id
        - name
        - balance
        - created_at
        - updated_at
    Restaurant:
      description: Restaurant Model
      type: object
      x-examples:
        Restaurant Example:
          balance: -3.402823669209385e+38
          name: string
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          created_at: '2019-08-24T14:15:22Z'
          updated_at: '2019-08-24T14:15:22Z'
      properties:
        balance:
          type: number
          format: float
        name:
          type: string
          minLength: 1
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - balance
        - name
        - id
        - created_at
        - updated_at
    Menu:
      description: ''
      type: object
      x-examples:
        Same Menu:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          price: -3.402823669209385e+38
          name: string
          restaurant_id: 72223a13-a381-496e-9cbe-9cb7ee501933
          created_at: string
          updated_at: string
      properties:
        id:
          type: string
          minLength: 1
          format: uuid
        price:
          type: number
          format: float
        name:
          type: string
          minLength: 1
        restaurant_id:
          type: string
          minLength: 1
          format: uuid
        created_at:
          type: string
          minLength: 1
          readOnly: true
        updated_at:
          type: string
          minLength: 1
          readOnly: true
      required:
        - id
        - price
        - name
        - restaurant_id
        - created_at
        - updated_at
    History:
      description: ''
      type: object
      x-examples:
        History Example:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          amount: -3.402823669209385e+38
          menu_id: 46d9403c-fd04-45b3-9f58-e8c1e7e51649
          user_id: a169451c-8525-4352-b8ca-070dd449a1a5
          created_at: '2019-08-24T14:15:22Z'
          updated_at: '2019-08-24T14:15:22Z'
      properties:
        id:
          type: string
          minLength: 1
          format: uuid
        amount:
          type: number
          format: float
        menu_id:
          type: string
          minLength: 1
          format: uuid
        user_id:
          type: string
          minLength: 1
          format: uuid
        created_at:
          type: string
          minLength: 1
          format: date-time
          readOnly: true
        updated_at:
          type: string
          minLength: 1
          format: date-time
          readOnly: true
      required:
        - id
        - amount
        - menu_id
        - user_id
        - created_at
        - updated_at
    OpeningHours:
      description: ''
      type: object
      x-examples:
        Sample Opening Hours:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          restaurant_id: 72223a13-a381-496e-9cbe-9cb7ee501933
          day: 1
          hours: string
      properties:
        id:
          type: string
          minLength: 1
          format: uuid
          readOnly: true
        restaurant_id:
          type: string
          minLength: 1
          format: uuid
          readOnly: true
        day:
          type: integer
          format: int32
          minimum: 1
          maximum: 7
        hours:
          type: string
          minLength: 1
      required:
        - id
        - restaurant_id
        - day
        - hours
